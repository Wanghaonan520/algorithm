#include<bits/stdc++.h>
using namespace std;
bool vis[10];
int main()
{
	int e[10][10],dis[10];
	int i,j,n,m,t1,t2,t3,u,v,min;
	int inf=9999999;
	cout<<"输入点数与边数" <<endl;
	scanf("%d %d",&n,&m);
	//初始化 
	for(i=1;i<=n;i++)
	for(j=1;j<=n;j++)
	{
		if(i==j)
		e[i][j]=0;
		else
		e[i][j]=inf;
	}
	//读入边
	for(i=1;i<=m;i++)
	{
		cout<<"输入点与点之间的权"<<endl; 
		scanf("%d %d %d",&t1,&t2,&t3);
		e[t1][t2]=t3;
	}
	//初始化dis数组
	for(int i=1;i<n;i++)
	dis[i]=e[1][i];
 
	//核心
	for(i=1;i<=n;i++)
	{
		min=inf;
		for(j=1;j<=n;j++)
		{
			if(!vis[j]&&dis[j]<min)
			{
				min=dis[j];
				u=j;//待加入到集合 
			}
		}
		vis[u]=true;
		for(v=1;v<=n;v++)
		{
			if(!vis[v]&&e[u][v]!=inf)
			{
				if(dis[v]>dis[u]+e[u][v])
				dis[v]=dis[u]+e[u][v];
			}
		 } 
	 }
	 //输出结果
	for(i=1;i<=n;i++)
	cout<<"路径长度变化"<<endl; 
	printf("%d  ",dis[i]); 	 
	return 0; 
 } 
